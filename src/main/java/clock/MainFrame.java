/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clock;

import Exceptions.SetTimeException;
import alarm.HMAlarmChecker;
import alarm.HMSAlarmChecker;
import alarm.IAlarm;
import alarm.HourMinAlarm;
import alarm.AlarmFabric;
import alarm.HourMinSecAlarm;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.Iterator;
import jdk.nashorn.internal.runtime.JSType;

/**
 *
 * @author stani
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        alarmLabel.setVisible(false);
        alarmThread.start();
    }
    
    IClock hms_clock1 = new HourMinSecClock(0, 0, 0, 31.99f, "hms_clock1");
    IClock hms_clock2 = new HourMinSecClock(0, 0, 0, 26.99f, "hms_clock2");
    IClock hm_clock = new HourMinClock(0, 0, 41.99f, "hm_clock");
    
    ArrayList <IAlarm> alarms = new ArrayList<>();
    
    Runnable alarmChecker = new HMSAlarmChecker(alarms, hms_clock1);
    Thread alarmThread = new Thread(alarmChecker);
    
    boolean alarm_now = false;

    Thread repaintingThread;
    
    Runnable r1 = new TimeMovement(hms_clock1);
    Runnable r2 = new TimeMovement(hms_clock2);
    Runnable r3 = new TimeMovement(hm_clock);
    Thread hms_clock1Thread = new Thread(r1);
    Thread hms_clock2Thread = new Thread(r2);
    Thread hm_clockThread = new Thread(r3);
    
    
    public void startTime() {
        hms_clock1Thread.start();
        hms_clock2Thread.start();
        hm_clockThread.start();
        
       
        if (repaintingThread == null) {
            repaintingThread = new Thread() {
                @Override
                public void run() {
                    while (true) {
                        try {
                            TimeLabel1.setText("" + hms_clock1);
                            
                            
                            for (Iterator<IAlarm> iterator = alarms.iterator(); iterator.hasNext();) {
                                IAlarm next = iterator.next();
                                if (next.isAlarm_now()) {
                                    alarm_now = true;
                                    alarmLabel.setVisible(true);
                                    break;
                                } else {
                                    alarm_now = false;
                                }
                            }
                            if (!alarm_now) {
                                alarmLabel.setVisible(false);
                            }
                            
                            repaint();
                            Thread.sleep(1000);
                        } catch (InterruptedException ex) {

                        }
                    }
                }
            };
        }
        repaintingThread.start();
    }

    
    public void freezeTime() {
        hms_clock1.setPause(true);
    }
    
    public void continueTime() {
        synchronized (this) {
            this.notifyAll();
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TimeLabel1 = new javax.swing.JLabel();
        startTimeButton = new javax.swing.JButton();
        commentLabel = new javax.swing.JLabel();
        HMTimeLabel2 = new javax.swing.JLabel();
        freezeTimeButton = new javax.swing.JButton();
        HMTimeLabel3 = new javax.swing.JLabel();
        createAlarmButton1 = new javax.swing.JButton();
        hourTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        alarmLabel = new javax.swing.JLabel();
        secTextField = new javax.swing.JTextField();
        minTextField = new javax.swing.JTextField();
        createAlarmButton2 = new javax.swing.JButton();
        createAlarmButton3 = new javax.swing.JButton();
        continueTimeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TimeLabel1.setText("TimeLabel1");

        startTimeButton.setText("Start time");
        startTimeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startTimeButtonMouseClicked(evt);
            }
        });
        startTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startTimeButtonActionPerformed(evt);
            }
        });

        commentLabel.setText("commentLabel");

        HMTimeLabel2.setText("TimeLabel2");

        freezeTimeButton.setText("Freeze time");
        freezeTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freezeTimeButtonActionPerformed(evt);
            }
        });

        HMTimeLabel3.setText("TimeLabel3");

        createAlarmButton1.setText("hms_clock1");
        createAlarmButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAlarmButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("- create alarm");

        alarmLabel.setForeground(new java.awt.Color(255, 0, 51));
        alarmLabel.setText("ALARM!");

        createAlarmButton2.setText("hms_clock2");
        createAlarmButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAlarmButton2ActionPerformed(evt);
            }
        });

        createAlarmButton3.setText("hm_clock");
        createAlarmButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAlarmButton3ActionPerformed(evt);
            }
        });

        continueTimeButton.setText("Continue time");
        continueTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueTimeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(commentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TimeLabel1)
                                .addGap(197, 197, 197)
                                .addComponent(HMTimeLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(HMTimeLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startTimeButton)
                                    .addComponent(createAlarmButton1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(minTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(createAlarmButton2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(createAlarmButton3)
                                        .addGap(48, 48, 48)
                                        .addComponent(jLabel1))
                                    .addComponent(secTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(freezeTimeButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(continueTimeButton)))
                                .addGap(0, 176, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(alarmLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TimeLabel1)
                    .addComponent(HMTimeLabel2)
                    .addComponent(HMTimeLabel3))
                .addGap(18, 18, 18)
                .addComponent(alarmLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createAlarmButton1)
                    .addComponent(jLabel1)
                    .addComponent(createAlarmButton2)
                    .addComponent(createAlarmButton3))
                .addGap(136, 136, 136)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startTimeButton)
                    .addComponent(freezeTimeButton)
                    .addComponent(continueTimeButton))
                .addGap(18, 18, 18)
                .addComponent(commentLabel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startTimeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startTimeButtonMouseClicked
        this.startTime();
    }//GEN-LAST:event_startTimeButtonMouseClicked

    private void startTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startTimeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startTimeButtonActionPerformed

    private void createAlarmButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAlarmButton1ActionPerformed
        int hour = JSType.toInteger(hourTextField.getText());
        int min = JSType.toInteger(minTextField.getText());
        int sec = JSType.toInteger(secTextField.getText());
        
        IAlarm alarm = AlarmFabric.hmsAlarmCreate(hour, min, sec);
        alarms.add(0, alarm);
        
    }//GEN-LAST:event_createAlarmButton1ActionPerformed

    private void createAlarmButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAlarmButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createAlarmButton2ActionPerformed

    private void createAlarmButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAlarmButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createAlarmButton3ActionPerformed

    private void freezeTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freezeTimeButtonActionPerformed
        freezeTime();
    }//GEN-LAST:event_freezeTimeButtonActionPerformed

    private void continueTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueTimeButtonActionPerformed
        continueTime();
    }//GEN-LAST:event_continueTimeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HMTimeLabel2;
    private javax.swing.JLabel HMTimeLabel3;
    private javax.swing.JLabel TimeLabel1;
    private javax.swing.JLabel alarmLabel;
    private javax.swing.JLabel commentLabel;
    private javax.swing.JButton continueTimeButton;
    private javax.swing.JButton createAlarmButton1;
    private javax.swing.JButton createAlarmButton2;
    private javax.swing.JButton createAlarmButton3;
    private javax.swing.JButton freezeTimeButton;
    private javax.swing.JTextField hourTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField minTextField;
    private javax.swing.JTextField secTextField;
    private javax.swing.JButton startTimeButton;
    // End of variables declaration//GEN-END:variables
}
